// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: match.proto
// Protobuf C++ Version: 5.29.3

#include "match.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace match {

inline constexpr Trade::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : makerorderid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        takerorderid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{0},
        quantity_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Trade::Trade(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradeDefaultTypeInternal() {}
  union {
    Trade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradeDefaultTypeInternal _Trade_default_instance_;

inline constexpr OrderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        orderid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        userid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        direction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ordertype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tif_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{0},
        quantity_{0},
        trigger_price_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderRequest::OrderRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderRequestDefaultTypeInternal() {}
  union {
    OrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderRequestDefaultTypeInternal _OrderRequest_default_instance_;

inline constexpr ModifyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModifyResponse::ModifyResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModifyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyResponseDefaultTypeInternal() {}
  union {
    ModifyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyResponseDefaultTypeInternal _ModifyResponse_default_instance_;

inline constexpr ModifyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        orderid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        userid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        direction_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_price_{0},
        new_quantity_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModifyRequest::ModifyRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModifyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModifyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModifyRequestDefaultTypeInternal() {}
  union {
    ModifyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModifyRequestDefaultTypeInternal _ModifyRequest_default_instance_;

inline constexpr CancelResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelResponse::CancelResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelResponseDefaultTypeInternal() {}
  union {
    CancelResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelResponseDefaultTypeInternal _CancelResponse_default_instance_;

inline constexpr CancelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        orderid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelRequest::CancelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelRequestDefaultTypeInternal() {}
  union {
    CancelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelRequestDefaultTypeInternal _CancelRequest_default_instance_;

inline constexpr TradeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trades_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TradeResponse::TradeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TradeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradeResponseDefaultTypeInternal() {}
  union {
    TradeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradeResponseDefaultTypeInternal _TradeResponse_default_instance_;
}  // namespace match
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_match_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_match_2eproto = nullptr;
const ::uint32_t
    TableStruct_match_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _impl_.orderid_),
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _impl_.userid_),
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _impl_.ordertype_),
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _impl_.tif_),
        PROTOBUF_FIELD_OFFSET(::match::OrderRequest, _impl_.trigger_price_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        3,
        4,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::match::Trade, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::match::Trade, _impl_.makerorderid_),
        PROTOBUF_FIELD_OFFSET(::match::Trade, _impl_.takerorderid_),
        PROTOBUF_FIELD_OFFSET(::match::Trade, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::match::Trade, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::match::Trade, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::match::Trade, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::match::TradeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::match::TradeResponse, _impl_.trades_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::match::CancelRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::match::CancelRequest, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::match::CancelRequest, _impl_.orderid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::match::CancelResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::match::CancelResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::match::ModifyRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::match::ModifyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::match::ModifyRequest, _impl_.orderid_),
        PROTOBUF_FIELD_OFFSET(::match::ModifyRequest, _impl_.userid_),
        PROTOBUF_FIELD_OFFSET(::match::ModifyRequest, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::match::ModifyRequest, _impl_.new_price_),
        PROTOBUF_FIELD_OFFSET(::match::ModifyRequest, _impl_.new_quantity_),
        PROTOBUF_FIELD_OFFSET(::match::ModifyRequest, _impl_.direction_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::match::ModifyResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::match::ModifyResponse, _impl_.success_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 17, -1, sizeof(::match::OrderRequest)},
        {26, -1, -1, sizeof(::match::Trade)},
        {40, -1, -1, sizeof(::match::TradeResponse)},
        {49, -1, -1, sizeof(::match::CancelRequest)},
        {59, -1, -1, sizeof(::match::CancelResponse)},
        {68, 82, -1, sizeof(::match::ModifyRequest)},
        {88, -1, -1, sizeof(::match::ModifyResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::match::_OrderRequest_default_instance_._instance,
    &::match::_Trade_default_instance_._instance,
    &::match::_TradeResponse_default_instance_._instance,
    &::match::_CancelRequest_default_instance_._instance,
    &::match::_CancelResponse_default_instance_._instance,
    &::match::_ModifyRequest_default_instance_._instance,
    &::match::_ModifyResponse_default_instance_._instance,
};
const char descriptor_table_protodef_match_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013match.proto\022\005match\"\202\002\n\014OrderRequest\022\024\n"
    "\007orderId\030\001 \001(\tH\000\210\001\001\022\023\n\006userId\030\002 \001(\tH\001\210\001\001"
    "\022\016\n\006symbol\030\003 \001(\t\022\r\n\005price\030\004 \001(\001\022\020\n\010quant"
    "ity\030\005 \001(\001\022\021\n\tdirection\030\006 \001(\t\022\026\n\tordertyp"
    "e\030\007 \001(\tH\002\210\001\001\022\020\n\003tif\030\010 \001(\tH\003\210\001\001\022\032\n\rtrigge"
    "r_price\030\t \001(\001H\004\210\001\001B\n\n\010_orderIdB\t\n\007_userI"
    "dB\014\n\n_ordertypeB\006\n\004_tifB\020\n\016_trigger_pric"
    "e\"w\n\005Trade\022\024\n\014makerOrderId\030\001 \001(\t\022\024\n\014take"
    "rOrderId\030\002 \001(\t\022\016\n\006symbol\030\003 \001(\t\022\r\n\005price\030"
    "\004 \001(\001\022\020\n\010quantity\030\005 \001(\001\022\021\n\ttimestamp\030\006 \001"
    "(\t\"-\n\rTradeResponse\022\034\n\006trades\030\001 \003(\0132\014.ma"
    "tch.Trade\"0\n\rCancelRequest\022\016\n\006symbol\030\001 \001"
    "(\t\022\017\n\007orderId\030\002 \001(\t\"!\n\016CancelResponse\022\017\n"
    "\007success\030\001 \001(\010\"\235\001\n\rModifyRequest\022\024\n\007orde"
    "rId\030\001 \001(\tH\000\210\001\001\022\023\n\006userId\030\002 \001(\tH\001\210\001\001\022\016\n\006s"
    "ymbol\030\003 \001(\t\022\021\n\tnew_price\030\004 \001(\001\022\024\n\014new_qu"
    "antity\030\005 \001(\001\022\021\n\tdirection\030\006 \001(\tB\n\n\010_orde"
    "rIdB\t\n\007_userId\"!\n\016ModifyResponse\022\017\n\007succ"
    "ess\030\001 \001(\0102\277\001\n\013MatchEngine\0228\n\013SubmitOrder"
    "\022\023.match.OrderRequest\032\024.match.TradeRespo"
    "nse\022:\n\013CancelOrder\022\024.match.CancelRequest"
    "\032\025.match.CancelResponse\022:\n\013ModifyOrder\022\024"
    ".match.ModifyRequest\032\025.match.ModifyRespo"
    "nseb\006proto3"
};
static ::absl::once_flag descriptor_table_match_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_match_2eproto = {
    false,
    false,
    931,
    descriptor_table_protodef_match_2eproto,
    "match.proto",
    &descriptor_table_match_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_match_2eproto::offsets,
    file_level_enum_descriptors_match_2eproto,
    file_level_service_descriptors_match_2eproto,
};
namespace match {
// ===================================================================

class OrderRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OrderRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_._has_bits_);
};

OrderRequest::OrderRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:match.OrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE OrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::match::OrderRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        orderid_(arena, from.orderid_),
        userid_(arena, from.userid_),
        symbol_(arena, from.symbol_),
        direction_(arena, from.direction_),
        ordertype_(arena, from.ordertype_),
        tif_(arena, from.tif_) {}

OrderRequest::OrderRequest(
    ::google::protobuf::Arena* arena,
    const OrderRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, price_),
           offsetof(Impl_, trigger_price_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::trigger_price_));

  // @@protoc_insertion_point(copy_constructor:match.OrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE OrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        orderid_(arena),
        userid_(arena),
        symbol_(arena),
        direction_(arena),
        ordertype_(arena),
        tif_(arena) {}

inline void OrderRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, trigger_price_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::trigger_price_));
}
OrderRequest::~OrderRequest() {
  // @@protoc_insertion_point(destructor:match.OrderRequest)
  SharedDtor(*this);
}
inline void OrderRequest::SharedDtor(MessageLite& self) {
  OrderRequest& this_ = static_cast<OrderRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.orderid_.Destroy();
  this_._impl_.userid_.Destroy();
  this_._impl_.symbol_.Destroy();
  this_._impl_.direction_.Destroy();
  this_._impl_.ordertype_.Destroy();
  this_._impl_.tif_.Destroy();
  this_._impl_.~Impl_();
}

inline void* OrderRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderRequest(arena);
}
constexpr auto OrderRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderRequest),
                                            alignof(OrderRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderRequest>(), &OrderRequest::ByteSizeLong,
            &OrderRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_._cached_size_),
        false,
    },
    &OrderRequest::kDescriptorMethods,
    &descriptor_table_match_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 75, 2> OrderRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::match::OrderRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string orderId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.orderid_)}},
    // optional string userId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.userid_)}},
    // string symbol = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.symbol_)}},
    // double price = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.price_)}},
    // double quantity = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.quantity_)}},
    // string direction = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.direction_)}},
    // optional string ordertype = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.ordertype_)}},
    // optional string tif = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.tif_)}},
    // optional double trigger_price = 9;
    {::_pbi::TcParser::FastF64S1,
     {73, 4, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.trigger_price_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string orderId = 1;
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.orderid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string userId = 2;
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.userid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string symbol = 3;
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.symbol_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double price = 4;
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.price_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double quantity = 5;
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string direction = 6;
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string ordertype = 7;
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.ordertype_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string tif = 8;
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.tif_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional double trigger_price = 9;
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.trigger_price_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\22\7\6\6\0\0\11\11\3\0\0\0\0\0\0\0"
    "match.OrderRequest"
    "orderId"
    "userId"
    "symbol"
    "direction"
    "ordertype"
    "tif"
  }},
};

PROTOBUF_NOINLINE void OrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:match.OrderRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.orderid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.userid_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.symbol_.ClearToEmpty();
  _impl_.direction_.ClearToEmpty();
  if (cached_has_bits & 0x0000000cu) {
    if (cached_has_bits & 0x00000004u) {
      _impl_.ordertype_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.tif_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.price_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quantity_) -
      reinterpret_cast<char*>(&_impl_.price_)) + sizeof(_impl_.quantity_));
  _impl_.trigger_price_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderRequest& this_ = static_cast<const OrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:match.OrderRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string orderId = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_orderid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.OrderRequest.orderId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string userId = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_userid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.OrderRequest.userId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string symbol = 3;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.OrderRequest.symbol");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // double price = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_price(), target);
          }

          // double quantity = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_quantity()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_quantity(), target);
          }

          // string direction = 6;
          if (!this_._internal_direction().empty()) {
            const std::string& _s = this_._internal_direction();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.OrderRequest.direction");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // optional string ordertype = 7;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_ordertype();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.OrderRequest.ordertype");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // optional string tif = 8;
          if (cached_has_bits & 0x00000008u) {
            const std::string& _s = this_._internal_tif();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.OrderRequest.tif");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // optional double trigger_price = 9;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                9, this_._internal_trigger_price(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:match.OrderRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderRequest::ByteSizeLong(const MessageLite& base) {
          const OrderRequest& this_ = static_cast<const OrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderRequest::ByteSizeLong() const {
          const OrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:match.OrderRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string orderId = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_orderid());
            }
            // optional string userId = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_userid());
            }
          }
           {
            // string symbol = 3;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string direction = 6;
            if (!this_._internal_direction().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_direction());
            }
          }
          if (cached_has_bits & 0x0000000cu) {
            // optional string ordertype = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ordertype());
            }
            // optional string tif = 8;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tif());
            }
          }
           {
            // double price = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
              total_size += 9;
            }
            // double quantity = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_quantity()) != 0) {
              total_size += 9;
            }
          }
           {
            // optional double trigger_price = 9;
            if (cached_has_bits & 0x00000010u) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderRequest*>(&to_msg);
  auto& from = static_cast<const OrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:match.OrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_orderid(from._internal_orderid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_userid(from._internal_userid());
    }
  }
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_direction().empty()) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (cached_has_bits & 0x0000000cu) {
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_ordertype(from._internal_ordertype());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_tif(from._internal_tif());
    }
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_price()) != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_quantity()) != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  if (cached_has_bits & 0x00000010u) {
    _this->_impl_.trigger_price_ = from._impl_.trigger_price_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderRequest::CopyFrom(const OrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:match.OrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderRequest::InternalSwap(OrderRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orderid_, &other->_impl_.orderid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userid_, &other->_impl_.userid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.direction_, &other->_impl_.direction_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ordertype_, &other->_impl_.ordertype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tif_, &other->_impl_.tif_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.trigger_price_)
      + sizeof(OrderRequest::_impl_.trigger_price_)
      - PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata OrderRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Trade::_Internal {
 public:
};

Trade::Trade(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:match.Trade)
}
inline PROTOBUF_NDEBUG_INLINE Trade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::match::Trade& from_msg)
      : makerorderid_(arena, from.makerorderid_),
        takerorderid_(arena, from.takerorderid_),
        symbol_(arena, from.symbol_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

Trade::Trade(
    ::google::protobuf::Arena* arena,
    const Trade& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Trade* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, price_),
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::quantity_));

  // @@protoc_insertion_point(copy_constructor:match.Trade)
}
inline PROTOBUF_NDEBUG_INLINE Trade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : makerorderid_(arena),
        takerorderid_(arena),
        symbol_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void Trade::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::quantity_));
}
Trade::~Trade() {
  // @@protoc_insertion_point(destructor:match.Trade)
  SharedDtor(*this);
}
inline void Trade::SharedDtor(MessageLite& self) {
  Trade& this_ = static_cast<Trade&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.makerorderid_.Destroy();
  this_._impl_.takerorderid_.Destroy();
  this_._impl_.symbol_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Trade::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Trade(arena);
}
constexpr auto Trade::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Trade),
                                            alignof(Trade));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Trade::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Trade_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Trade::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Trade>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Trade::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Trade>(), &Trade::ByteSizeLong,
            &Trade::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Trade, _impl_._cached_size_),
        false,
    },
    &Trade::kDescriptorMethods,
    &descriptor_table_match_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Trade::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 59, 2> Trade::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::match::Trade>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string makerOrderId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.makerorderid_)}},
    // string takerOrderId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.takerorderid_)}},
    // string symbol = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.symbol_)}},
    // double price = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.price_)}},
    // double quantity = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.quantity_)}},
    // string timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string makerOrderId = 1;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.makerorderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string takerOrderId = 2;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.takerorderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string symbol = 3;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double price = 4;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double quantity = 5;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.quantity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\13\14\14\6\0\0\11\0"
    "match.Trade"
    "makerOrderId"
    "takerOrderId"
    "symbol"
    "timestamp"
  }},
};

PROTOBUF_NOINLINE void Trade::Clear() {
// @@protoc_insertion_point(message_clear_start:match.Trade)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.makerorderid_.ClearToEmpty();
  _impl_.takerorderid_.ClearToEmpty();
  _impl_.symbol_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  ::memset(&_impl_.price_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quantity_) -
      reinterpret_cast<char*>(&_impl_.price_)) + sizeof(_impl_.quantity_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Trade::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Trade& this_ = static_cast<const Trade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Trade::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Trade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:match.Trade)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string makerOrderId = 1;
          if (!this_._internal_makerorderid().empty()) {
            const std::string& _s = this_._internal_makerorderid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.Trade.makerOrderId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string takerOrderId = 2;
          if (!this_._internal_takerorderid().empty()) {
            const std::string& _s = this_._internal_takerorderid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.Trade.takerOrderId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string symbol = 3;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.Trade.symbol");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // double price = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_price(), target);
          }

          // double quantity = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_quantity()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_quantity(), target);
          }

          // string timestamp = 6;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.Trade.timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:match.Trade)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Trade::ByteSizeLong(const MessageLite& base) {
          const Trade& this_ = static_cast<const Trade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Trade::ByteSizeLong() const {
          const Trade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:match.Trade)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string makerOrderId = 1;
            if (!this_._internal_makerorderid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_makerorderid());
            }
            // string takerOrderId = 2;
            if (!this_._internal_takerorderid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_takerorderid());
            }
            // string symbol = 3;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string timestamp = 6;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // double price = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
              total_size += 9;
            }
            // double quantity = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_quantity()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Trade::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Trade*>(&to_msg);
  auto& from = static_cast<const Trade&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:match.Trade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_makerorderid().empty()) {
    _this->_internal_set_makerorderid(from._internal_makerorderid());
  }
  if (!from._internal_takerorderid().empty()) {
    _this->_internal_set_takerorderid(from._internal_takerorderid());
  }
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_price()) != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_quantity()) != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Trade::CopyFrom(const Trade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:match.Trade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Trade::InternalSwap(Trade* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.makerorderid_, &other->_impl_.makerorderid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.takerorderid_, &other->_impl_.takerorderid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Trade, _impl_.quantity_)
      + sizeof(Trade::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(Trade, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata Trade::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TradeResponse::_Internal {
 public:
};

TradeResponse::TradeResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:match.TradeResponse)
}
inline PROTOBUF_NDEBUG_INLINE TradeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::match::TradeResponse& from_msg)
      : trades_{visibility, arena, from.trades_},
        _cached_size_{0} {}

TradeResponse::TradeResponse(
    ::google::protobuf::Arena* arena,
    const TradeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TradeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:match.TradeResponse)
}
inline PROTOBUF_NDEBUG_INLINE TradeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trades_{visibility, arena},
        _cached_size_{0} {}

inline void TradeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TradeResponse::~TradeResponse() {
  // @@protoc_insertion_point(destructor:match.TradeResponse)
  SharedDtor(*this);
}
inline void TradeResponse::SharedDtor(MessageLite& self) {
  TradeResponse& this_ = static_cast<TradeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TradeResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TradeResponse(arena);
}
constexpr auto TradeResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TradeResponse, _impl_.trades_) +
          decltype(TradeResponse::_impl_.trades_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TradeResponse), alignof(TradeResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TradeResponse::PlacementNew_,
                                 sizeof(TradeResponse),
                                 alignof(TradeResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TradeResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TradeResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TradeResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TradeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TradeResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TradeResponse>(), &TradeResponse::ByteSizeLong,
            &TradeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TradeResponse, _impl_._cached_size_),
        false,
    },
    &TradeResponse::kDescriptorMethods,
    &descriptor_table_match_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TradeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TradeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::match::TradeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .match.Trade trades = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TradeResponse, _impl_.trades_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .match.Trade trades = 1;
    {PROTOBUF_FIELD_OFFSET(TradeResponse, _impl_.trades_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::match::Trade>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TradeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:match.TradeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trades_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TradeResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TradeResponse& this_ = static_cast<const TradeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TradeResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TradeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:match.TradeResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .match.Trade trades = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_trades_size());
               i < n; i++) {
            const auto& repfield = this_._internal_trades().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:match.TradeResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TradeResponse::ByteSizeLong(const MessageLite& base) {
          const TradeResponse& this_ = static_cast<const TradeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TradeResponse::ByteSizeLong() const {
          const TradeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:match.TradeResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .match.Trade trades = 1;
            {
              total_size += 1UL * this_._internal_trades_size();
              for (const auto& msg : this_._internal_trades()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TradeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TradeResponse*>(&to_msg);
  auto& from = static_cast<const TradeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:match.TradeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trades()->MergeFrom(
      from._internal_trades());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TradeResponse::CopyFrom(const TradeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:match.TradeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TradeResponse::InternalSwap(TradeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
}

::google::protobuf::Metadata TradeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelRequest::_Internal {
 public:
};

CancelRequest::CancelRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:match.CancelRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::match::CancelRequest& from_msg)
      : symbol_(arena, from.symbol_),
        orderid_(arena, from.orderid_),
        _cached_size_{0} {}

CancelRequest::CancelRequest(
    ::google::protobuf::Arena* arena,
    const CancelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:match.CancelRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : symbol_(arena),
        orderid_(arena),
        _cached_size_{0} {}

inline void CancelRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CancelRequest::~CancelRequest() {
  // @@protoc_insertion_point(destructor:match.CancelRequest)
  SharedDtor(*this);
}
inline void CancelRequest::SharedDtor(MessageLite& self) {
  CancelRequest& this_ = static_cast<CancelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.symbol_.Destroy();
  this_._impl_.orderid_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CancelRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelRequest(arena);
}
constexpr auto CancelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CancelRequest),
                                            alignof(CancelRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelRequest>(), &CancelRequest::ByteSizeLong,
            &CancelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_._cached_size_),
        false,
    },
    &CancelRequest::kDescriptorMethods,
    &descriptor_table_match_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> CancelRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::match::CancelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string orderId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_.orderid_)}},
    // string symbol = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1;
    {PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string orderId = 2;
    {PROTOBUF_FIELD_OFFSET(CancelRequest, _impl_.orderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\6\7\0\0\0\0\0"
    "match.CancelRequest"
    "symbol"
    "orderId"
  }},
};

PROTOBUF_NOINLINE void CancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:match.CancelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.orderid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelRequest& this_ = static_cast<const CancelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:match.CancelRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string symbol = 1;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.CancelRequest.symbol");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string orderId = 2;
          if (!this_._internal_orderid().empty()) {
            const std::string& _s = this_._internal_orderid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.CancelRequest.orderId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:match.CancelRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelRequest::ByteSizeLong(const MessageLite& base) {
          const CancelRequest& this_ = static_cast<const CancelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelRequest::ByteSizeLong() const {
          const CancelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:match.CancelRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string symbol = 1;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string orderId = 2;
            if (!this_._internal_orderid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_orderid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelRequest*>(&to_msg);
  auto& from = static_cast<const CancelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:match.CancelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_orderid().empty()) {
    _this->_internal_set_orderid(from._internal_orderid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelRequest::CopyFrom(const CancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:match.CancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelRequest::InternalSwap(CancelRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orderid_, &other->_impl_.orderid_, arena);
}

::google::protobuf::Metadata CancelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelResponse::_Internal {
 public:
};

CancelResponse::CancelResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:match.CancelResponse)
}
CancelResponse::CancelResponse(
    ::google::protobuf::Arena* arena, const CancelResponse& from)
    : CancelResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CancelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CancelResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
CancelResponse::~CancelResponse() {
  // @@protoc_insertion_point(destructor:match.CancelResponse)
  SharedDtor(*this);
}
inline void CancelResponse::SharedDtor(MessageLite& self) {
  CancelResponse& this_ = static_cast<CancelResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CancelResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelResponse(arena);
}
constexpr auto CancelResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CancelResponse),
                                            alignof(CancelResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelResponse>(), &CancelResponse::ByteSizeLong,
            &CancelResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelResponse, _impl_._cached_size_),
        false,
    },
    &CancelResponse::kDescriptorMethods,
    &descriptor_table_match_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CancelResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::match::CancelResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CancelResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CancelResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(CancelResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CancelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:match.CancelResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelResponse& this_ = static_cast<const CancelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:match.CancelResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:match.CancelResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelResponse::ByteSizeLong(const MessageLite& base) {
          const CancelResponse& this_ = static_cast<const CancelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelResponse::ByteSizeLong() const {
          const CancelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:match.CancelResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelResponse*>(&to_msg);
  auto& from = static_cast<const CancelResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:match.CancelResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelResponse::CopyFrom(const CancelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:match.CancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelResponse::InternalSwap(CancelResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata CancelResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModifyRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ModifyRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_._has_bits_);
};

ModifyRequest::ModifyRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:match.ModifyRequest)
}
inline PROTOBUF_NDEBUG_INLINE ModifyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::match::ModifyRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        orderid_(arena, from.orderid_),
        userid_(arena, from.userid_),
        symbol_(arena, from.symbol_),
        direction_(arena, from.direction_) {}

ModifyRequest::ModifyRequest(
    ::google::protobuf::Arena* arena,
    const ModifyRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModifyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, new_price_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, new_price_),
           offsetof(Impl_, new_quantity_) -
               offsetof(Impl_, new_price_) +
               sizeof(Impl_::new_quantity_));

  // @@protoc_insertion_point(copy_constructor:match.ModifyRequest)
}
inline PROTOBUF_NDEBUG_INLINE ModifyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        orderid_(arena),
        userid_(arena),
        symbol_(arena),
        direction_(arena) {}

inline void ModifyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, new_price_),
           0,
           offsetof(Impl_, new_quantity_) -
               offsetof(Impl_, new_price_) +
               sizeof(Impl_::new_quantity_));
}
ModifyRequest::~ModifyRequest() {
  // @@protoc_insertion_point(destructor:match.ModifyRequest)
  SharedDtor(*this);
}
inline void ModifyRequest::SharedDtor(MessageLite& self) {
  ModifyRequest& this_ = static_cast<ModifyRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.orderid_.Destroy();
  this_._impl_.userid_.Destroy();
  this_._impl_.symbol_.Destroy();
  this_._impl_.direction_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ModifyRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModifyRequest(arena);
}
constexpr auto ModifyRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ModifyRequest),
                                            alignof(ModifyRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModifyRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModifyRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModifyRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModifyRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModifyRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModifyRequest>(), &ModifyRequest::ByteSizeLong,
            &ModifyRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_._cached_size_),
        false,
    },
    &ModifyRequest::kDescriptorMethods,
    &descriptor_table_match_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModifyRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 56, 2> ModifyRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::match::ModifyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string orderId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.orderid_)}},
    // optional string userId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.userid_)}},
    // string symbol = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.symbol_)}},
    // double new_price = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.new_price_)}},
    // double new_quantity = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.new_quantity_)}},
    // string direction = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.direction_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string orderId = 1;
    {PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.orderid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string userId = 2;
    {PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.userid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string symbol = 3;
    {PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.symbol_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double new_price = 4;
    {PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.new_price_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double new_quantity = 5;
    {PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.new_quantity_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string direction = 6;
    {PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.direction_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\7\6\6\0\0\11\0"
    "match.ModifyRequest"
    "orderId"
    "userId"
    "symbol"
    "direction"
  }},
};

PROTOBUF_NOINLINE void ModifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:match.ModifyRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.orderid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.userid_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.symbol_.ClearToEmpty();
  _impl_.direction_.ClearToEmpty();
  ::memset(&_impl_.new_price_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.new_quantity_) -
      reinterpret_cast<char*>(&_impl_.new_price_)) + sizeof(_impl_.new_quantity_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModifyRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModifyRequest& this_ = static_cast<const ModifyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModifyRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModifyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:match.ModifyRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string orderId = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_orderid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.ModifyRequest.orderId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string userId = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_userid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.ModifyRequest.userId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string symbol = 3;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.ModifyRequest.symbol");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // double new_price = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_new_price()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_new_price(), target);
          }

          // double new_quantity = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_new_quantity()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_new_quantity(), target);
          }

          // string direction = 6;
          if (!this_._internal_direction().empty()) {
            const std::string& _s = this_._internal_direction();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "match.ModifyRequest.direction");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:match.ModifyRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModifyRequest::ByteSizeLong(const MessageLite& base) {
          const ModifyRequest& this_ = static_cast<const ModifyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModifyRequest::ByteSizeLong() const {
          const ModifyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:match.ModifyRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string orderId = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_orderid());
            }
            // optional string userId = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_userid());
            }
          }
           {
            // string symbol = 3;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string direction = 6;
            if (!this_._internal_direction().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_direction());
            }
            // double new_price = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_new_price()) != 0) {
              total_size += 9;
            }
            // double new_quantity = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_new_quantity()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModifyRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModifyRequest*>(&to_msg);
  auto& from = static_cast<const ModifyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:match.ModifyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_orderid(from._internal_orderid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_userid(from._internal_userid());
    }
  }
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_direction().empty()) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_new_price()) != 0) {
    _this->_impl_.new_price_ = from._impl_.new_price_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_new_quantity()) != 0) {
    _this->_impl_.new_quantity_ = from._impl_.new_quantity_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModifyRequest::CopyFrom(const ModifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:match.ModifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModifyRequest::InternalSwap(ModifyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orderid_, &other->_impl_.orderid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userid_, &other->_impl_.userid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.direction_, &other->_impl_.direction_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.new_quantity_)
      + sizeof(ModifyRequest::_impl_.new_quantity_)
      - PROTOBUF_FIELD_OFFSET(ModifyRequest, _impl_.new_price_)>(
          reinterpret_cast<char*>(&_impl_.new_price_),
          reinterpret_cast<char*>(&other->_impl_.new_price_));
}

::google::protobuf::Metadata ModifyRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModifyResponse::_Internal {
 public:
};

ModifyResponse::ModifyResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:match.ModifyResponse)
}
ModifyResponse::ModifyResponse(
    ::google::protobuf::Arena* arena, const ModifyResponse& from)
    : ModifyResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ModifyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ModifyResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
ModifyResponse::~ModifyResponse() {
  // @@protoc_insertion_point(destructor:match.ModifyResponse)
  SharedDtor(*this);
}
inline void ModifyResponse::SharedDtor(MessageLite& self) {
  ModifyResponse& this_ = static_cast<ModifyResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ModifyResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModifyResponse(arena);
}
constexpr auto ModifyResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModifyResponse),
                                            alignof(ModifyResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModifyResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModifyResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModifyResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModifyResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModifyResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModifyResponse>(), &ModifyResponse::ByteSizeLong,
            &ModifyResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModifyResponse, _impl_._cached_size_),
        false,
    },
    &ModifyResponse::kDescriptorMethods,
    &descriptor_table_match_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModifyResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ModifyResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::match::ModifyResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModifyResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ModifyResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(ModifyResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ModifyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:match.ModifyResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModifyResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModifyResponse& this_ = static_cast<const ModifyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModifyResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModifyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:match.ModifyResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:match.ModifyResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModifyResponse::ByteSizeLong(const MessageLite& base) {
          const ModifyResponse& this_ = static_cast<const ModifyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModifyResponse::ByteSizeLong() const {
          const ModifyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:match.ModifyResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModifyResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModifyResponse*>(&to_msg);
  auto& from = static_cast<const ModifyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:match.ModifyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModifyResponse::CopyFrom(const ModifyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:match.ModifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModifyResponse::InternalSwap(ModifyResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata ModifyResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace match
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_match_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
