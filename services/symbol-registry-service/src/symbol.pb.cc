// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: symbol.proto
// Protobuf C++ Version: 5.29.3

#include "symbol.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace symbol {

inline constexpr SymbolResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quote_currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tick_size_{0},
        max_leverage_{0},
        price_precision_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SymbolResponse::SymbolResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SymbolResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SymbolResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SymbolResponseDefaultTypeInternal() {}
  union {
    SymbolResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SymbolResponseDefaultTypeInternal _SymbolResponse_default_instance_;

inline constexpr SymbolRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SymbolRequest::SymbolRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SymbolRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SymbolRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SymbolRequestDefaultTypeInternal() {}
  union {
    SymbolRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SymbolRequestDefaultTypeInternal _SymbolRequest_default_instance_;
}  // namespace symbol
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_symbol_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_symbol_2eproto = nullptr;
const ::uint32_t
    TableStruct_symbol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::symbol::SymbolRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::symbol::SymbolRequest, _impl_.symbol_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::symbol::SymbolResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::symbol::SymbolResponse, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::symbol::SymbolResponse, _impl_.tick_size_),
        PROTOBUF_FIELD_OFFSET(::symbol::SymbolResponse, _impl_.price_precision_),
        PROTOBUF_FIELD_OFFSET(::symbol::SymbolResponse, _impl_.max_leverage_),
        PROTOBUF_FIELD_OFFSET(::symbol::SymbolResponse, _impl_.quote_currency_),
        PROTOBUF_FIELD_OFFSET(::symbol::SymbolResponse, _impl_.base_currency_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::symbol::SymbolRequest)},
        {9, -1, -1, sizeof(::symbol::SymbolResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::symbol::_SymbolRequest_default_instance_._instance,
    &::symbol::_SymbolResponse_default_instance_._instance,
};
const char descriptor_table_protodef_symbol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014symbol.proto\022\006symbol\"\037\n\rSymbolRequest\022"
    "\016\n\006symbol\030\001 \001(\t\"\221\001\n\016SymbolResponse\022\016\n\006sy"
    "mbol\030\001 \001(\t\022\021\n\ttick_size\030\002 \001(\001\022\027\n\017price_p"
    "recision\030\003 \001(\005\022\024\n\014max_leverage\030\004 \001(\001\022\026\n\016"
    "quote_currency\030\005 \001(\t\022\025\n\rbase_currency\030\006 "
    "\001(\t2O\n\rSymbolService\022>\n\rGetSymbolInfo\022\025."
    "symbol.SymbolRequest\032\026.symbol.SymbolResp"
    "onseb\006proto3"
};
static ::absl::once_flag descriptor_table_symbol_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_symbol_2eproto = {
    false,
    false,
    292,
    descriptor_table_protodef_symbol_2eproto,
    "symbol.proto",
    &descriptor_table_symbol_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_symbol_2eproto::offsets,
    file_level_enum_descriptors_symbol_2eproto,
    file_level_service_descriptors_symbol_2eproto,
};
namespace symbol {
// ===================================================================

class SymbolRequest::_Internal {
 public:
};

SymbolRequest::SymbolRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:symbol.SymbolRequest)
}
inline PROTOBUF_NDEBUG_INLINE SymbolRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::symbol::SymbolRequest& from_msg)
      : symbol_(arena, from.symbol_),
        _cached_size_{0} {}

SymbolRequest::SymbolRequest(
    ::google::protobuf::Arena* arena,
    const SymbolRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SymbolRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:symbol.SymbolRequest)
}
inline PROTOBUF_NDEBUG_INLINE SymbolRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : symbol_(arena),
        _cached_size_{0} {}

inline void SymbolRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SymbolRequest::~SymbolRequest() {
  // @@protoc_insertion_point(destructor:symbol.SymbolRequest)
  SharedDtor(*this);
}
inline void SymbolRequest::SharedDtor(MessageLite& self) {
  SymbolRequest& this_ = static_cast<SymbolRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.symbol_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SymbolRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SymbolRequest(arena);
}
constexpr auto SymbolRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SymbolRequest),
                                            alignof(SymbolRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SymbolRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SymbolRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SymbolRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SymbolRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SymbolRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SymbolRequest>(), &SymbolRequest::ByteSizeLong,
            &SymbolRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SymbolRequest, _impl_._cached_size_),
        false,
    },
    &SymbolRequest::kDescriptorMethods,
    &descriptor_table_symbol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SymbolRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 35, 2> SymbolRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::symbol::SymbolRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string symbol = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SymbolRequest, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1;
    {PROTOBUF_FIELD_OFFSET(SymbolRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\6\0\0\0\0\0\0"
    "symbol.SymbolRequest"
    "symbol"
  }},
};

PROTOBUF_NOINLINE void SymbolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:symbol.SymbolRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SymbolRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SymbolRequest& this_ = static_cast<const SymbolRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SymbolRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SymbolRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:symbol.SymbolRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string symbol = 1;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "symbol.SymbolRequest.symbol");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:symbol.SymbolRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SymbolRequest::ByteSizeLong(const MessageLite& base) {
          const SymbolRequest& this_ = static_cast<const SymbolRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SymbolRequest::ByteSizeLong() const {
          const SymbolRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:symbol.SymbolRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string symbol = 1;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SymbolRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SymbolRequest*>(&to_msg);
  auto& from = static_cast<const SymbolRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symbol.SymbolRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SymbolRequest::CopyFrom(const SymbolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symbol.SymbolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SymbolRequest::InternalSwap(SymbolRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
}

::google::protobuf::Metadata SymbolRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SymbolResponse::_Internal {
 public:
};

SymbolResponse::SymbolResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:symbol.SymbolResponse)
}
inline PROTOBUF_NDEBUG_INLINE SymbolResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::symbol::SymbolResponse& from_msg)
      : symbol_(arena, from.symbol_),
        quote_currency_(arena, from.quote_currency_),
        base_currency_(arena, from.base_currency_),
        _cached_size_{0} {}

SymbolResponse::SymbolResponse(
    ::google::protobuf::Arena* arena,
    const SymbolResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SymbolResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tick_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tick_size_),
           offsetof(Impl_, price_precision_) -
               offsetof(Impl_, tick_size_) +
               sizeof(Impl_::price_precision_));

  // @@protoc_insertion_point(copy_constructor:symbol.SymbolResponse)
}
inline PROTOBUF_NDEBUG_INLINE SymbolResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : symbol_(arena),
        quote_currency_(arena),
        base_currency_(arena),
        _cached_size_{0} {}

inline void SymbolResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tick_size_),
           0,
           offsetof(Impl_, price_precision_) -
               offsetof(Impl_, tick_size_) +
               sizeof(Impl_::price_precision_));
}
SymbolResponse::~SymbolResponse() {
  // @@protoc_insertion_point(destructor:symbol.SymbolResponse)
  SharedDtor(*this);
}
inline void SymbolResponse::SharedDtor(MessageLite& self) {
  SymbolResponse& this_ = static_cast<SymbolResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.symbol_.Destroy();
  this_._impl_.quote_currency_.Destroy();
  this_._impl_.base_currency_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SymbolResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SymbolResponse(arena);
}
constexpr auto SymbolResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SymbolResponse),
                                            alignof(SymbolResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SymbolResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SymbolResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SymbolResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SymbolResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SymbolResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SymbolResponse>(), &SymbolResponse::ByteSizeLong,
            &SymbolResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_._cached_size_),
        false,
    },
    &SymbolResponse::kDescriptorMethods,
    &descriptor_table_symbol_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SymbolResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 63, 2> SymbolResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::symbol::SymbolResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.symbol_)}},
    // double tick_size = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.tick_size_)}},
    // int32 price_precision = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SymbolResponse, _impl_.price_precision_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.price_precision_)}},
    // double max_leverage = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.max_leverage_)}},
    // string quote_currency = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.quote_currency_)}},
    // string base_currency = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.base_currency_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1;
    {PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double tick_size = 2;
    {PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.tick_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int32 price_precision = 3;
    {PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.price_precision_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double max_leverage = 4;
    {PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.max_leverage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string quote_currency = 5;
    {PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.quote_currency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string base_currency = 6;
    {PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.base_currency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\6\0\0\0\16\15\0"
    "symbol.SymbolResponse"
    "symbol"
    "quote_currency"
    "base_currency"
  }},
};

PROTOBUF_NOINLINE void SymbolResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:symbol.SymbolResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.quote_currency_.ClearToEmpty();
  _impl_.base_currency_.ClearToEmpty();
  ::memset(&_impl_.tick_size_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.price_precision_) -
      reinterpret_cast<char*>(&_impl_.tick_size_)) + sizeof(_impl_.price_precision_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SymbolResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SymbolResponse& this_ = static_cast<const SymbolResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SymbolResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SymbolResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:symbol.SymbolResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string symbol = 1;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "symbol.SymbolResponse.symbol");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // double tick_size = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_tick_size()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_tick_size(), target);
          }

          // int32 price_precision = 3;
          if (this_._internal_price_precision() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_price_precision(), target);
          }

          // double max_leverage = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_max_leverage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_max_leverage(), target);
          }

          // string quote_currency = 5;
          if (!this_._internal_quote_currency().empty()) {
            const std::string& _s = this_._internal_quote_currency();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "symbol.SymbolResponse.quote_currency");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string base_currency = 6;
          if (!this_._internal_base_currency().empty()) {
            const std::string& _s = this_._internal_base_currency();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "symbol.SymbolResponse.base_currency");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:symbol.SymbolResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SymbolResponse::ByteSizeLong(const MessageLite& base) {
          const SymbolResponse& this_ = static_cast<const SymbolResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SymbolResponse::ByteSizeLong() const {
          const SymbolResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:symbol.SymbolResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string symbol = 1;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string quote_currency = 5;
            if (!this_._internal_quote_currency().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_quote_currency());
            }
            // string base_currency = 6;
            if (!this_._internal_base_currency().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_base_currency());
            }
            // double tick_size = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_tick_size()) != 0) {
              total_size += 9;
            }
            // double max_leverage = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_max_leverage()) != 0) {
              total_size += 9;
            }
            // int32 price_precision = 3;
            if (this_._internal_price_precision() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_price_precision());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SymbolResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SymbolResponse*>(&to_msg);
  auto& from = static_cast<const SymbolResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symbol.SymbolResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_quote_currency().empty()) {
    _this->_internal_set_quote_currency(from._internal_quote_currency());
  }
  if (!from._internal_base_currency().empty()) {
    _this->_internal_set_base_currency(from._internal_base_currency());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_tick_size()) != 0) {
    _this->_impl_.tick_size_ = from._impl_.tick_size_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_max_leverage()) != 0) {
    _this->_impl_.max_leverage_ = from._impl_.max_leverage_;
  }
  if (from._internal_price_precision() != 0) {
    _this->_impl_.price_precision_ = from._impl_.price_precision_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SymbolResponse::CopyFrom(const SymbolResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symbol.SymbolResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SymbolResponse::InternalSwap(SymbolResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.quote_currency_, &other->_impl_.quote_currency_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.base_currency_, &other->_impl_.base_currency_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.price_precision_)
      + sizeof(SymbolResponse::_impl_.price_precision_)
      - PROTOBUF_FIELD_OFFSET(SymbolResponse, _impl_.tick_size_)>(
          reinterpret_cast<char*>(&_impl_.tick_size_),
          reinterpret_cast<char*>(&other->_impl_.tick_size_));
}

::google::protobuf::Metadata SymbolResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace symbol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_symbol_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
