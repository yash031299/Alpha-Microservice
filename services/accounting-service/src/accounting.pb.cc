// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: accounting.proto
// Protobuf C++ Version: 5.29.3

#include "accounting.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace accounting {

inline constexpr PnLRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reference_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        realized_pnl_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PnLRequest::PnLRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PnLRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PnLRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PnLRequestDefaultTypeInternal() {}
  union {
    PnLRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PnLRequestDefaultTypeInternal _PnLRequest_default_instance_;

inline constexpr FundingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reference_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        funding_amount_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FundingRequest::FundingRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FundingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FundingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FundingRequestDefaultTypeInternal() {}
  union {
    FundingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FundingRequestDefaultTypeInternal _FundingRequest_default_instance_;

inline constexpr Ack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Ack::Ack(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AckDefaultTypeInternal() {}
  union {
    Ack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AckDefaultTypeInternal _Ack_default_instance_;
}  // namespace accounting
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_accounting_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_accounting_2eproto = nullptr;
const ::uint32_t
    TableStruct_accounting_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::accounting::FundingRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::accounting::FundingRequest, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::accounting::FundingRequest, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::accounting::FundingRequest, _impl_.funding_amount_),
        PROTOBUF_FIELD_OFFSET(::accounting::FundingRequest, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::accounting::FundingRequest, _impl_.reference_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::accounting::PnLRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::accounting::PnLRequest, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::accounting::PnLRequest, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::accounting::PnLRequest, _impl_.realized_pnl_),
        PROTOBUF_FIELD_OFFSET(::accounting::PnLRequest, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::accounting::PnLRequest, _impl_.reference_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::accounting::Ack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::accounting::Ack, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::accounting::Ack, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::accounting::FundingRequest)},
        {13, -1, -1, sizeof(::accounting::PnLRequest)},
        {26, -1, -1, sizeof(::accounting::Ack)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::accounting::_FundingRequest_default_instance_._instance,
    &::accounting::_PnLRequest_default_instance_._instance,
    &::accounting::_Ack_default_instance_._instance,
};
const char descriptor_table_protodef_accounting_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020accounting.proto\022\naccounting\"o\n\016Fundin"
    "gRequest\022\017\n\007user_id\030\001 \001(\t\022\016\n\006symbol\030\002 \001("
    "\t\022\026\n\016funding_amount\030\003 \001(\001\022\021\n\ttimestamp\030\004"
    " \001(\t\022\021\n\treference\030\005 \001(\t\"i\n\nPnLRequest\022\017\n"
    "\007user_id\030\001 \001(\t\022\016\n\006symbol\030\002 \001(\t\022\024\n\014realiz"
    "ed_pnl\030\003 \001(\001\022\021\n\ttimestamp\030\004 \001(\t\022\021\n\trefer"
    "ence\030\005 \001(\t\"\'\n\003Ack\022\017\n\007success\030\001 \001(\010\022\017\n\007me"
    "ssage\030\002 \001(\t2\206\001\n\021AccountingService\022;\n\014App"
    "lyFunding\022\032.accounting.FundingRequest\032\017."
    "accounting.Ack\0224\n\tRecordPnL\022\026.accounting"
    ".PnLRequest\032\017.accounting.Ackb\006proto3"
};
static ::absl::once_flag descriptor_table_accounting_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_accounting_2eproto = {
    false,
    false,
    436,
    descriptor_table_protodef_accounting_2eproto,
    "accounting.proto",
    &descriptor_table_accounting_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_accounting_2eproto::offsets,
    file_level_enum_descriptors_accounting_2eproto,
    file_level_service_descriptors_accounting_2eproto,
};
namespace accounting {
// ===================================================================

class FundingRequest::_Internal {
 public:
};

FundingRequest::FundingRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:accounting.FundingRequest)
}
inline PROTOBUF_NDEBUG_INLINE FundingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::accounting::FundingRequest& from_msg)
      : user_id_(arena, from.user_id_),
        symbol_(arena, from.symbol_),
        timestamp_(arena, from.timestamp_),
        reference_(arena, from.reference_),
        _cached_size_{0} {}

FundingRequest::FundingRequest(
    ::google::protobuf::Arena* arena,
    const FundingRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FundingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.funding_amount_ = from._impl_.funding_amount_;

  // @@protoc_insertion_point(copy_constructor:accounting.FundingRequest)
}
inline PROTOBUF_NDEBUG_INLINE FundingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        symbol_(arena),
        timestamp_(arena),
        reference_(arena),
        _cached_size_{0} {}

inline void FundingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.funding_amount_ = {};
}
FundingRequest::~FundingRequest() {
  // @@protoc_insertion_point(destructor:accounting.FundingRequest)
  SharedDtor(*this);
}
inline void FundingRequest::SharedDtor(MessageLite& self) {
  FundingRequest& this_ = static_cast<FundingRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.symbol_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.reference_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FundingRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FundingRequest(arena);
}
constexpr auto FundingRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FundingRequest),
                                            alignof(FundingRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FundingRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FundingRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FundingRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FundingRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FundingRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FundingRequest>(), &FundingRequest::ByteSizeLong,
            &FundingRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_._cached_size_),
        false,
    },
    &FundingRequest::kDescriptorMethods,
    &descriptor_table_accounting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FundingRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 65, 2> FundingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::accounting::FundingRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_.user_id_)}},
    // string symbol = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_.symbol_)}},
    // double funding_amount = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_.funding_amount_)}},
    // string timestamp = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_.timestamp_)}},
    // string reference = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_.reference_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string symbol = 2;
    {PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double funding_amount = 3;
    {PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_.funding_amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reference = 5;
    {PROTOBUF_FIELD_OFFSET(FundingRequest, _impl_.reference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\7\6\0\11\11\0\0"
    "accounting.FundingRequest"
    "user_id"
    "symbol"
    "timestamp"
    "reference"
  }},
};

PROTOBUF_NOINLINE void FundingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounting.FundingRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.symbol_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.reference_.ClearToEmpty();
  _impl_.funding_amount_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FundingRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FundingRequest& this_ = static_cast<const FundingRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FundingRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FundingRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:accounting.FundingRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "accounting.FundingRequest.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string symbol = 2;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "accounting.FundingRequest.symbol");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // double funding_amount = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_funding_amount()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_funding_amount(), target);
          }

          // string timestamp = 4;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "accounting.FundingRequest.timestamp");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string reference = 5;
          if (!this_._internal_reference().empty()) {
            const std::string& _s = this_._internal_reference();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "accounting.FundingRequest.reference");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:accounting.FundingRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FundingRequest::ByteSizeLong(const MessageLite& base) {
          const FundingRequest& this_ = static_cast<const FundingRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FundingRequest::ByteSizeLong() const {
          const FundingRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:accounting.FundingRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string symbol = 2;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string timestamp = 4;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string reference = 5;
            if (!this_._internal_reference().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reference());
            }
            // double funding_amount = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_funding_amount()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FundingRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FundingRequest*>(&to_msg);
  auto& from = static_cast<const FundingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:accounting.FundingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_reference().empty()) {
    _this->_internal_set_reference(from._internal_reference());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_funding_amount()) != 0) {
    _this->_impl_.funding_amount_ = from._impl_.funding_amount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FundingRequest::CopyFrom(const FundingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounting.FundingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FundingRequest::InternalSwap(FundingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reference_, &other->_impl_.reference_, arena);
        swap(_impl_.funding_amount_, other->_impl_.funding_amount_);
}

::google::protobuf::Metadata FundingRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PnLRequest::_Internal {
 public:
};

PnLRequest::PnLRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:accounting.PnLRequest)
}
inline PROTOBUF_NDEBUG_INLINE PnLRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::accounting::PnLRequest& from_msg)
      : user_id_(arena, from.user_id_),
        symbol_(arena, from.symbol_),
        timestamp_(arena, from.timestamp_),
        reference_(arena, from.reference_),
        _cached_size_{0} {}

PnLRequest::PnLRequest(
    ::google::protobuf::Arena* arena,
    const PnLRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PnLRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.realized_pnl_ = from._impl_.realized_pnl_;

  // @@protoc_insertion_point(copy_constructor:accounting.PnLRequest)
}
inline PROTOBUF_NDEBUG_INLINE PnLRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        symbol_(arena),
        timestamp_(arena),
        reference_(arena),
        _cached_size_{0} {}

inline void PnLRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.realized_pnl_ = {};
}
PnLRequest::~PnLRequest() {
  // @@protoc_insertion_point(destructor:accounting.PnLRequest)
  SharedDtor(*this);
}
inline void PnLRequest::SharedDtor(MessageLite& self) {
  PnLRequest& this_ = static_cast<PnLRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.symbol_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.reference_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PnLRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PnLRequest(arena);
}
constexpr auto PnLRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PnLRequest),
                                            alignof(PnLRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PnLRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PnLRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PnLRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PnLRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PnLRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PnLRequest>(), &PnLRequest::ByteSizeLong,
            &PnLRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_._cached_size_),
        false,
    },
    &PnLRequest::kDescriptorMethods,
    &descriptor_table_accounting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PnLRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 61, 2> PnLRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::accounting::PnLRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_.user_id_)}},
    // string symbol = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_.symbol_)}},
    // double realized_pnl = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_.realized_pnl_)}},
    // string timestamp = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_.timestamp_)}},
    // string reference = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_.reference_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string symbol = 2;
    {PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double realized_pnl = 3;
    {PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_.realized_pnl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reference = 5;
    {PROTOBUF_FIELD_OFFSET(PnLRequest, _impl_.reference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\7\6\0\11\11\0\0"
    "accounting.PnLRequest"
    "user_id"
    "symbol"
    "timestamp"
    "reference"
  }},
};

PROTOBUF_NOINLINE void PnLRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:accounting.PnLRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.symbol_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.reference_.ClearToEmpty();
  _impl_.realized_pnl_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PnLRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PnLRequest& this_ = static_cast<const PnLRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PnLRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PnLRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:accounting.PnLRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "accounting.PnLRequest.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string symbol = 2;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "accounting.PnLRequest.symbol");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // double realized_pnl = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_realized_pnl()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_realized_pnl(), target);
          }

          // string timestamp = 4;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "accounting.PnLRequest.timestamp");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string reference = 5;
          if (!this_._internal_reference().empty()) {
            const std::string& _s = this_._internal_reference();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "accounting.PnLRequest.reference");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:accounting.PnLRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PnLRequest::ByteSizeLong(const MessageLite& base) {
          const PnLRequest& this_ = static_cast<const PnLRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PnLRequest::ByteSizeLong() const {
          const PnLRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:accounting.PnLRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // string symbol = 2;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string timestamp = 4;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // string reference = 5;
            if (!this_._internal_reference().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reference());
            }
            // double realized_pnl = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_realized_pnl()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PnLRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PnLRequest*>(&to_msg);
  auto& from = static_cast<const PnLRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:accounting.PnLRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (!from._internal_reference().empty()) {
    _this->_internal_set_reference(from._internal_reference());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_realized_pnl()) != 0) {
    _this->_impl_.realized_pnl_ = from._impl_.realized_pnl_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PnLRequest::CopyFrom(const PnLRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounting.PnLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PnLRequest::InternalSwap(PnLRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reference_, &other->_impl_.reference_, arena);
        swap(_impl_.realized_pnl_, other->_impl_.realized_pnl_);
}

::google::protobuf::Metadata PnLRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Ack::_Internal {
 public:
};

Ack::Ack(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:accounting.Ack)
}
inline PROTOBUF_NDEBUG_INLINE Ack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::accounting::Ack& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

Ack::Ack(
    ::google::protobuf::Arena* arena,
    const Ack& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Ack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:accounting.Ack)
}
inline PROTOBUF_NDEBUG_INLINE Ack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void Ack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
Ack::~Ack() {
  // @@protoc_insertion_point(destructor:accounting.Ack)
  SharedDtor(*this);
}
inline void Ack::SharedDtor(MessageLite& self) {
  Ack& this_ = static_cast<Ack&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Ack::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Ack(arena);
}
constexpr auto Ack::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Ack),
                                            alignof(Ack));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Ack::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Ack_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Ack::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Ack>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Ack::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Ack>(), &Ack::ByteSizeLong,
            &Ack::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Ack, _impl_._cached_size_),
        false,
    },
    &Ack::kDescriptorMethods,
    &descriptor_table_accounting_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Ack::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 30, 2> Ack::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::accounting::Ack>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Ack, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Ack, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Ack, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(Ack, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(Ack, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\16\0\7\0\0\0\0\0"
    "accounting.Ack"
    "message"
  }},
};

PROTOBUF_NOINLINE void Ack::Clear() {
// @@protoc_insertion_point(message_clear_start:accounting.Ack)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Ack::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Ack& this_ = static_cast<const Ack&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Ack::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Ack& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:accounting.Ack)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "accounting.Ack.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:accounting.Ack)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Ack::ByteSizeLong(const MessageLite& base) {
          const Ack& this_ = static_cast<const Ack&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Ack::ByteSizeLong() const {
          const Ack& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:accounting.Ack)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Ack::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Ack*>(&to_msg);
  auto& from = static_cast<const Ack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:accounting.Ack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ack::CopyFrom(const Ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accounting.Ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Ack::InternalSwap(Ack* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata Ack::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace accounting
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_accounting_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
