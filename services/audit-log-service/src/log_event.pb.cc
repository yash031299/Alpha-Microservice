// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: log_event.proto
// Protobuf C++ Version: 5.29.3

#include "log_event.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr TradeEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        makerorderid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        takerorderid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{0},
        quantity_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TradeEvent::TradeEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TradeEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradeEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradeEventDefaultTypeInternal() {}
  union {
    TradeEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradeEventDefaultTypeInternal _TradeEvent_default_instance_;

inline constexpr OrderEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : orderid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        userid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        side_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_detail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{0},
        quantity_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderEvent::OrderEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderEventDefaultTypeInternal() {}
  union {
    OrderEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderEventDefaultTypeInternal _OrderEvent_default_instance_;

inline constexpr LogAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogAck::LogAck(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogAckDefaultTypeInternal() {}
  union {
    LogAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogAckDefaultTypeInternal _LogAck_default_instance_;

inline constexpr LiquidationEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : userid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pnl_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LiquidationEvent::LiquidationEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LiquidationEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LiquidationEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LiquidationEventDefaultTypeInternal() {}
  union {
    LiquidationEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LiquidationEventDefaultTypeInternal _LiquidationEvent_default_instance_;

inline constexpr FundingEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fundingrate_{0},
        longoi_{0},
        shortoi_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FundingEvent::FundingEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FundingEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FundingEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FundingEventDefaultTypeInternal() {}
  union {
    FundingEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FundingEventDefaultTypeInternal _FundingEvent_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_log_5fevent_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_log_5fevent_2eproto = nullptr;
const ::uint32_t
    TableStruct_log_5fevent_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::TradeEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TradeEvent, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::TradeEvent, _impl_.makerorderid_),
        PROTOBUF_FIELD_OFFSET(::TradeEvent, _impl_.takerorderid_),
        PROTOBUF_FIELD_OFFSET(::TradeEvent, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::TradeEvent, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::TradeEvent, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::OrderEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::OrderEvent, _impl_.orderid_),
        PROTOBUF_FIELD_OFFSET(::OrderEvent, _impl_.userid_),
        PROTOBUF_FIELD_OFFSET(::OrderEvent, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::OrderEvent, _impl_.side_),
        PROTOBUF_FIELD_OFFSET(::OrderEvent, _impl_.type_detail_),
        PROTOBUF_FIELD_OFFSET(::OrderEvent, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::OrderEvent, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::OrderEvent, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::OrderEvent, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::FundingEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::FundingEvent, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::FundingEvent, _impl_.fundingrate_),
        PROTOBUF_FIELD_OFFSET(::FundingEvent, _impl_.longoi_),
        PROTOBUF_FIELD_OFFSET(::FundingEvent, _impl_.shortoi_),
        PROTOBUF_FIELD_OFFSET(::FundingEvent, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::LiquidationEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::LiquidationEvent, _impl_.userid_),
        PROTOBUF_FIELD_OFFSET(::LiquidationEvent, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::LiquidationEvent, _impl_.pnl_),
        PROTOBUF_FIELD_OFFSET(::LiquidationEvent, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::LiquidationEvent, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::LogAck, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::LogAck, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::LogAck, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::TradeEvent)},
        {14, -1, -1, sizeof(::OrderEvent)},
        {31, -1, -1, sizeof(::FundingEvent)},
        {44, -1, -1, sizeof(::LiquidationEvent)},
        {57, -1, -1, sizeof(::LogAck)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_TradeEvent_default_instance_._instance,
    &::_OrderEvent_default_instance_._instance,
    &::_FundingEvent_default_instance_._instance,
    &::_LiquidationEvent_default_instance_._instance,
    &::_LogAck_default_instance_._instance,
};
const char descriptor_table_protodef_log_5fevent_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017log_event.proto\"|\n\nTradeEvent\022\016\n\006symbo"
    "l\030\001 \001(\t\022\024\n\014makerOrderId\030\002 \001(\t\022\024\n\014takerOr"
    "derId\030\003 \001(\t\022\r\n\005price\030\004 \001(\001\022\020\n\010quantity\030\005"
    " \001(\001\022\021\n\ttimestamp\030\006 \001(\t\"\244\001\n\nOrderEvent\022\017"
    "\n\007orderId\030\001 \001(\t\022\016\n\006userId\030\002 \001(\t\022\016\n\006symbo"
    "l\030\003 \001(\t\022\014\n\004side\030\004 \001(\t\022\023\n\013type_detail\030\005 \001"
    "(\t\022\r\n\005price\030\006 \001(\001\022\020\n\010quantity\030\007 \001(\001\022\016\n\006s"
    "tatus\030\010 \001(\t\022\021\n\ttimestamp\030\t \001(\t\"g\n\014Fundin"
    "gEvent\022\016\n\006symbol\030\001 \001(\t\022\023\n\013fundingRate\030\002 "
    "\001(\001\022\016\n\006longOi\030\003 \001(\001\022\017\n\007shortOi\030\004 \001(\001\022\021\n\t"
    "timestamp\030\005 \001(\t\"b\n\020LiquidationEvent\022\016\n\006u"
    "serId\030\001 \001(\t\022\016\n\006symbol\030\002 \001(\t\022\013\n\003pnl\030\003 \001(\001"
    "\022\016\n\006reason\030\004 \001(\t\022\021\n\ttimestamp\030\005 \001(\t\"*\n\006L"
    "ogAck\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\t2"
    "\251\001\n\017LogEventService\022 \n\010LogTrade\022\013.TradeE"
    "vent\032\007.LogAck\022 \n\010LogOrder\022\013.OrderEvent\032\007"
    ".LogAck\022$\n\nLogFunding\022\r.FundingEvent\032\007.L"
    "ogAck\022,\n\016LogLiquidation\022\021.LiquidationEve"
    "nt\032\007.LogAckb\006proto3"
};
static ::absl::once_flag descriptor_table_log_5fevent_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_log_5fevent_2eproto = {
    false,
    false,
    739,
    descriptor_table_protodef_log_5fevent_2eproto,
    "log_event.proto",
    &descriptor_table_log_5fevent_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_log_5fevent_2eproto::offsets,
    file_level_enum_descriptors_log_5fevent_2eproto,
    file_level_service_descriptors_log_5fevent_2eproto,
};
// ===================================================================

class TradeEvent::_Internal {
 public:
};

TradeEvent::TradeEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TradeEvent)
}
inline PROTOBUF_NDEBUG_INLINE TradeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::TradeEvent& from_msg)
      : symbol_(arena, from.symbol_),
        makerorderid_(arena, from.makerorderid_),
        takerorderid_(arena, from.takerorderid_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

TradeEvent::TradeEvent(
    ::google::protobuf::Arena* arena,
    const TradeEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TradeEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, price_),
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::quantity_));

  // @@protoc_insertion_point(copy_constructor:TradeEvent)
}
inline PROTOBUF_NDEBUG_INLINE TradeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : symbol_(arena),
        makerorderid_(arena),
        takerorderid_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void TradeEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::quantity_));
}
TradeEvent::~TradeEvent() {
  // @@protoc_insertion_point(destructor:TradeEvent)
  SharedDtor(*this);
}
inline void TradeEvent::SharedDtor(MessageLite& self) {
  TradeEvent& this_ = static_cast<TradeEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.symbol_.Destroy();
  this_._impl_.makerorderid_.Destroy();
  this_._impl_.takerorderid_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TradeEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TradeEvent(arena);
}
constexpr auto TradeEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TradeEvent),
                                            alignof(TradeEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TradeEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TradeEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TradeEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TradeEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TradeEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TradeEvent>(), &TradeEvent::ByteSizeLong,
            &TradeEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_._cached_size_),
        false,
    },
    &TradeEvent::kDescriptorMethods,
    &descriptor_table_log_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TradeEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 58, 2> TradeEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TradeEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.symbol_)}},
    // string makerOrderId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.makerorderid_)}},
    // string takerOrderId = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.takerorderid_)}},
    // double price = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.price_)}},
    // double quantity = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.quantity_)}},
    // string timestamp = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1;
    {PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string makerOrderId = 2;
    {PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.makerorderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string takerOrderId = 3;
    {PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.takerorderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double price = 4;
    {PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double quantity = 5;
    {PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.quantity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string timestamp = 6;
    {PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\6\14\14\0\0\11\0"
    "TradeEvent"
    "symbol"
    "makerOrderId"
    "takerOrderId"
    "timestamp"
  }},
};

PROTOBUF_NOINLINE void TradeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:TradeEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.makerorderid_.ClearToEmpty();
  _impl_.takerorderid_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  ::memset(&_impl_.price_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quantity_) -
      reinterpret_cast<char*>(&_impl_.price_)) + sizeof(_impl_.quantity_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TradeEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TradeEvent& this_ = static_cast<const TradeEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TradeEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TradeEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:TradeEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string symbol = 1;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TradeEvent.symbol");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string makerOrderId = 2;
          if (!this_._internal_makerorderid().empty()) {
            const std::string& _s = this_._internal_makerorderid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TradeEvent.makerOrderId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string takerOrderId = 3;
          if (!this_._internal_takerorderid().empty()) {
            const std::string& _s = this_._internal_takerorderid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TradeEvent.takerOrderId");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // double price = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_price(), target);
          }

          // double quantity = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_quantity()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_quantity(), target);
          }

          // string timestamp = 6;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TradeEvent.timestamp");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:TradeEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TradeEvent::ByteSizeLong(const MessageLite& base) {
          const TradeEvent& this_ = static_cast<const TradeEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TradeEvent::ByteSizeLong() const {
          const TradeEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:TradeEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string symbol = 1;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string makerOrderId = 2;
            if (!this_._internal_makerorderid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_makerorderid());
            }
            // string takerOrderId = 3;
            if (!this_._internal_takerorderid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_takerorderid());
            }
            // string timestamp = 6;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // double price = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
              total_size += 9;
            }
            // double quantity = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_quantity()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TradeEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TradeEvent*>(&to_msg);
  auto& from = static_cast<const TradeEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TradeEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_makerorderid().empty()) {
    _this->_internal_set_makerorderid(from._internal_makerorderid());
  }
  if (!from._internal_takerorderid().empty()) {
    _this->_internal_set_takerorderid(from._internal_takerorderid());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_price()) != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_quantity()) != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TradeEvent::CopyFrom(const TradeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TradeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TradeEvent::InternalSwap(TradeEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.makerorderid_, &other->_impl_.makerorderid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.takerorderid_, &other->_impl_.takerorderid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.quantity_)
      + sizeof(TradeEvent::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(TradeEvent, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata TradeEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderEvent::_Internal {
 public:
};

OrderEvent::OrderEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:OrderEvent)
}
inline PROTOBUF_NDEBUG_INLINE OrderEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::OrderEvent& from_msg)
      : orderid_(arena, from.orderid_),
        userid_(arena, from.userid_),
        symbol_(arena, from.symbol_),
        side_(arena, from.side_),
        type_detail_(arena, from.type_detail_),
        status_(arena, from.status_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

OrderEvent::OrderEvent(
    ::google::protobuf::Arena* arena,
    const OrderEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, price_),
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::quantity_));

  // @@protoc_insertion_point(copy_constructor:OrderEvent)
}
inline PROTOBUF_NDEBUG_INLINE OrderEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : orderid_(arena),
        userid_(arena),
        symbol_(arena),
        side_(arena),
        type_detail_(arena),
        status_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void OrderEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::quantity_));
}
OrderEvent::~OrderEvent() {
  // @@protoc_insertion_point(destructor:OrderEvent)
  SharedDtor(*this);
}
inline void OrderEvent::SharedDtor(MessageLite& self) {
  OrderEvent& this_ = static_cast<OrderEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.orderid_.Destroy();
  this_._impl_.userid_.Destroy();
  this_._impl_.symbol_.Destroy();
  this_._impl_.side_.Destroy();
  this_._impl_.type_detail_.Destroy();
  this_._impl_.status_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* OrderEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderEvent(arena);
}
constexpr auto OrderEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderEvent),
                                            alignof(OrderEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderEvent>(), &OrderEvent::ByteSizeLong,
            &OrderEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_._cached_size_),
        false,
    },
    &OrderEvent::kDescriptorMethods,
    &descriptor_table_log_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 76, 2> OrderEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::OrderEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string orderId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.orderid_)}},
    // string userId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.userid_)}},
    // string symbol = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.symbol_)}},
    // string side = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.side_)}},
    // string type_detail = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.type_detail_)}},
    // double price = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.price_)}},
    // double quantity = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.quantity_)}},
    // string status = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.status_)}},
    // string timestamp = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string orderId = 1;
    {PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.orderid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string userId = 2;
    {PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.userid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string symbol = 3;
    {PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string side = 4;
    {PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.side_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type_detail = 5;
    {PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.type_detail_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double price = 6;
    {PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double quantity = 7;
    {PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.quantity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string status = 8;
    {PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 9;
    {PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\7\6\6\4\13\0\0\6\11\0\0\0\0\0\0"
    "OrderEvent"
    "orderId"
    "userId"
    "symbol"
    "side"
    "type_detail"
    "status"
    "timestamp"
  }},
};

PROTOBUF_NOINLINE void OrderEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:OrderEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orderid_.ClearToEmpty();
  _impl_.userid_.ClearToEmpty();
  _impl_.symbol_.ClearToEmpty();
  _impl_.side_.ClearToEmpty();
  _impl_.type_detail_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  ::memset(&_impl_.price_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.quantity_) -
      reinterpret_cast<char*>(&_impl_.price_)) + sizeof(_impl_.quantity_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderEvent& this_ = static_cast<const OrderEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:OrderEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string orderId = 1;
          if (!this_._internal_orderid().empty()) {
            const std::string& _s = this_._internal_orderid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "OrderEvent.orderId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string userId = 2;
          if (!this_._internal_userid().empty()) {
            const std::string& _s = this_._internal_userid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "OrderEvent.userId");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string symbol = 3;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "OrderEvent.symbol");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string side = 4;
          if (!this_._internal_side().empty()) {
            const std::string& _s = this_._internal_side();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "OrderEvent.side");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string type_detail = 5;
          if (!this_._internal_type_detail().empty()) {
            const std::string& _s = this_._internal_type_detail();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "OrderEvent.type_detail");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // double price = 6;
          if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_price(), target);
          }

          // double quantity = 7;
          if (::absl::bit_cast<::uint64_t>(this_._internal_quantity()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_quantity(), target);
          }

          // string status = 8;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "OrderEvent.status");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string timestamp = 9;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "OrderEvent.timestamp");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:OrderEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderEvent::ByteSizeLong(const MessageLite& base) {
          const OrderEvent& this_ = static_cast<const OrderEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderEvent::ByteSizeLong() const {
          const OrderEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:OrderEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string orderId = 1;
            if (!this_._internal_orderid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_orderid());
            }
            // string userId = 2;
            if (!this_._internal_userid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_userid());
            }
            // string symbol = 3;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string side = 4;
            if (!this_._internal_side().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_side());
            }
            // string type_detail = 5;
            if (!this_._internal_type_detail().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type_detail());
            }
            // string status = 8;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
            // string timestamp = 9;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // double price = 6;
            if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
              total_size += 9;
            }
            // double quantity = 7;
            if (::absl::bit_cast<::uint64_t>(this_._internal_quantity()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderEvent*>(&to_msg);
  auto& from = static_cast<const OrderEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:OrderEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_orderid().empty()) {
    _this->_internal_set_orderid(from._internal_orderid());
  }
  if (!from._internal_userid().empty()) {
    _this->_internal_set_userid(from._internal_userid());
  }
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_side().empty()) {
    _this->_internal_set_side(from._internal_side());
  }
  if (!from._internal_type_detail().empty()) {
    _this->_internal_set_type_detail(from._internal_type_detail());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_price()) != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_quantity()) != 0) {
    _this->_impl_.quantity_ = from._impl_.quantity_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderEvent::CopyFrom(const OrderEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrderEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderEvent::InternalSwap(OrderEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orderid_, &other->_impl_.orderid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userid_, &other->_impl_.userid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.side_, &other->_impl_.side_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_detail_, &other->_impl_.type_detail_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.quantity_)
      + sizeof(OrderEvent::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(OrderEvent, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata OrderEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FundingEvent::_Internal {
 public:
};

FundingEvent::FundingEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:FundingEvent)
}
inline PROTOBUF_NDEBUG_INLINE FundingEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::FundingEvent& from_msg)
      : symbol_(arena, from.symbol_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

FundingEvent::FundingEvent(
    ::google::protobuf::Arena* arena,
    const FundingEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FundingEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fundingrate_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fundingrate_),
           offsetof(Impl_, shortoi_) -
               offsetof(Impl_, fundingrate_) +
               sizeof(Impl_::shortoi_));

  // @@protoc_insertion_point(copy_constructor:FundingEvent)
}
inline PROTOBUF_NDEBUG_INLINE FundingEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : symbol_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void FundingEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fundingrate_),
           0,
           offsetof(Impl_, shortoi_) -
               offsetof(Impl_, fundingrate_) +
               sizeof(Impl_::shortoi_));
}
FundingEvent::~FundingEvent() {
  // @@protoc_insertion_point(destructor:FundingEvent)
  SharedDtor(*this);
}
inline void FundingEvent::SharedDtor(MessageLite& self) {
  FundingEvent& this_ = static_cast<FundingEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.symbol_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FundingEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FundingEvent(arena);
}
constexpr auto FundingEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FundingEvent),
                                            alignof(FundingEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FundingEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FundingEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FundingEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FundingEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FundingEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FundingEvent>(), &FundingEvent::ByteSizeLong,
            &FundingEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_._cached_size_),
        false,
    },
    &FundingEvent::kDescriptorMethods,
    &descriptor_table_log_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FundingEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 36, 2> FundingEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::FundingEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.symbol_)}},
    // double fundingRate = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.fundingrate_)}},
    // double longOi = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.longoi_)}},
    // double shortOi = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.shortoi_)}},
    // string timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1;
    {PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double fundingRate = 2;
    {PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.fundingrate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longOi = 3;
    {PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.longoi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double shortOi = 4;
    {PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.shortoi_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\6\0\0\0\11\0\0"
    "FundingEvent"
    "symbol"
    "timestamp"
  }},
};

PROTOBUF_NOINLINE void FundingEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:FundingEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  ::memset(&_impl_.fundingrate_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.shortoi_) -
      reinterpret_cast<char*>(&_impl_.fundingrate_)) + sizeof(_impl_.shortoi_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FundingEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FundingEvent& this_ = static_cast<const FundingEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FundingEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FundingEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:FundingEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string symbol = 1;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FundingEvent.symbol");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // double fundingRate = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_fundingrate()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_fundingrate(), target);
          }

          // double longOi = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_longoi()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_longoi(), target);
          }

          // double shortOi = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_shortoi()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_shortoi(), target);
          }

          // string timestamp = 5;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "FundingEvent.timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:FundingEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FundingEvent::ByteSizeLong(const MessageLite& base) {
          const FundingEvent& this_ = static_cast<const FundingEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FundingEvent::ByteSizeLong() const {
          const FundingEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:FundingEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string symbol = 1;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string timestamp = 5;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // double fundingRate = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_fundingrate()) != 0) {
              total_size += 9;
            }
            // double longOi = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_longoi()) != 0) {
              total_size += 9;
            }
            // double shortOi = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_shortoi()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FundingEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FundingEvent*>(&to_msg);
  auto& from = static_cast<const FundingEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FundingEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_fundingrate()) != 0) {
    _this->_impl_.fundingrate_ = from._impl_.fundingrate_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_longoi()) != 0) {
    _this->_impl_.longoi_ = from._impl_.longoi_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_shortoi()) != 0) {
    _this->_impl_.shortoi_ = from._impl_.shortoi_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FundingEvent::CopyFrom(const FundingEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FundingEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FundingEvent::InternalSwap(FundingEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.shortoi_)
      + sizeof(FundingEvent::_impl_.shortoi_)
      - PROTOBUF_FIELD_OFFSET(FundingEvent, _impl_.fundingrate_)>(
          reinterpret_cast<char*>(&_impl_.fundingrate_),
          reinterpret_cast<char*>(&other->_impl_.fundingrate_));
}

::google::protobuf::Metadata FundingEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LiquidationEvent::_Internal {
 public:
};

LiquidationEvent::LiquidationEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:LiquidationEvent)
}
inline PROTOBUF_NDEBUG_INLINE LiquidationEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::LiquidationEvent& from_msg)
      : userid_(arena, from.userid_),
        symbol_(arena, from.symbol_),
        reason_(arena, from.reason_),
        timestamp_(arena, from.timestamp_),
        _cached_size_{0} {}

LiquidationEvent::LiquidationEvent(
    ::google::protobuf::Arena* arena,
    const LiquidationEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LiquidationEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.pnl_ = from._impl_.pnl_;

  // @@protoc_insertion_point(copy_constructor:LiquidationEvent)
}
inline PROTOBUF_NDEBUG_INLINE LiquidationEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : userid_(arena),
        symbol_(arena),
        reason_(arena),
        timestamp_(arena),
        _cached_size_{0} {}

inline void LiquidationEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pnl_ = {};
}
LiquidationEvent::~LiquidationEvent() {
  // @@protoc_insertion_point(destructor:LiquidationEvent)
  SharedDtor(*this);
}
inline void LiquidationEvent::SharedDtor(MessageLite& self) {
  LiquidationEvent& this_ = static_cast<LiquidationEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.userid_.Destroy();
  this_._impl_.symbol_.Destroy();
  this_._impl_.reason_.Destroy();
  this_._impl_.timestamp_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LiquidationEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LiquidationEvent(arena);
}
constexpr auto LiquidationEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LiquidationEvent),
                                            alignof(LiquidationEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LiquidationEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LiquidationEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LiquidationEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LiquidationEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LiquidationEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LiquidationEvent>(), &LiquidationEvent::ByteSizeLong,
            &LiquidationEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_._cached_size_),
        false,
    },
    &LiquidationEvent::kDescriptorMethods,
    &descriptor_table_log_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LiquidationEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 52, 2> LiquidationEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::LiquidationEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string userId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_.userid_)}},
    // string symbol = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_.symbol_)}},
    // double pnl = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_.pnl_)}},
    // string reason = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_.reason_)}},
    // string timestamp = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string userId = 1;
    {PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_.userid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string symbol = 2;
    {PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double pnl = 3;
    {PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_.pnl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string reason = 4;
    {PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(LiquidationEvent, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\6\6\0\6\11\0\0"
    "LiquidationEvent"
    "userId"
    "symbol"
    "reason"
    "timestamp"
  }},
};

PROTOBUF_NOINLINE void LiquidationEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:LiquidationEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userid_.ClearToEmpty();
  _impl_.symbol_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  _impl_.pnl_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LiquidationEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LiquidationEvent& this_ = static_cast<const LiquidationEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LiquidationEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LiquidationEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:LiquidationEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string userId = 1;
          if (!this_._internal_userid().empty()) {
            const std::string& _s = this_._internal_userid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "LiquidationEvent.userId");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string symbol = 2;
          if (!this_._internal_symbol().empty()) {
            const std::string& _s = this_._internal_symbol();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "LiquidationEvent.symbol");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // double pnl = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_pnl()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_pnl(), target);
          }

          // string reason = 4;
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "LiquidationEvent.reason");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string timestamp = 5;
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "LiquidationEvent.timestamp");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:LiquidationEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LiquidationEvent::ByteSizeLong(const MessageLite& base) {
          const LiquidationEvent& this_ = static_cast<const LiquidationEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LiquidationEvent::ByteSizeLong() const {
          const LiquidationEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:LiquidationEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string userId = 1;
            if (!this_._internal_userid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_userid());
            }
            // string symbol = 2;
            if (!this_._internal_symbol().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_symbol());
            }
            // string reason = 4;
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
            // string timestamp = 5;
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
            // double pnl = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_pnl()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LiquidationEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LiquidationEvent*>(&to_msg);
  auto& from = static_cast<const LiquidationEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LiquidationEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_userid().empty()) {
    _this->_internal_set_userid(from._internal_userid());
  }
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_pnl()) != 0) {
    _this->_impl_.pnl_ = from._impl_.pnl_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LiquidationEvent::CopyFrom(const LiquidationEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LiquidationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LiquidationEvent::InternalSwap(LiquidationEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userid_, &other->_impl_.userid_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
        swap(_impl_.pnl_, other->_impl_.pnl_);
}

::google::protobuf::Metadata LiquidationEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LogAck::_Internal {
 public:
};

LogAck::LogAck(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:LogAck)
}
inline PROTOBUF_NDEBUG_INLINE LogAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::LogAck& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

LogAck::LogAck(
    ::google::protobuf::Arena* arena,
    const LogAck& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogAck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:LogAck)
}
inline PROTOBUF_NDEBUG_INLINE LogAck::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void LogAck::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
LogAck::~LogAck() {
  // @@protoc_insertion_point(destructor:LogAck)
  SharedDtor(*this);
}
inline void LogAck::SharedDtor(MessageLite& self) {
  LogAck& this_ = static_cast<LogAck&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LogAck::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogAck(arena);
}
constexpr auto LogAck::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LogAck),
                                            alignof(LogAck));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogAck::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogAck_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LogAck::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogAck>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogAck::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogAck>(), &LogAck::ByteSizeLong,
            &LogAck::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogAck, _impl_._cached_size_),
        false,
    },
    &LogAck::kDescriptorMethods,
    &descriptor_table_log_5fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogAck::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 22, 2> LogAck::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::LogAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LogAck, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LogAck, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LogAck, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(LogAck, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(LogAck, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\6\0\7\0\0\0\0\0"
    "LogAck"
    "message"
  }},
};

PROTOBUF_NOINLINE void LogAck::Clear() {
// @@protoc_insertion_point(message_clear_start:LogAck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogAck::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogAck& this_ = static_cast<const LogAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogAck::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:LogAck)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "LogAck.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:LogAck)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogAck::ByteSizeLong(const MessageLite& base) {
          const LogAck& this_ = static_cast<const LogAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogAck::ByteSizeLong() const {
          const LogAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:LogAck)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogAck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogAck*>(&to_msg);
  auto& from = static_cast<const LogAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LogAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogAck::CopyFrom(const LogAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LogAck::InternalSwap(LogAck* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata LogAck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_log_5fevent_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
